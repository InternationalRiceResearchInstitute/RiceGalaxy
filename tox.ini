[tox]
envlist = py27-lint, py27-lint-imports, py27-lint-imports-include-list, py27-unit, qunit, mako-count, web-controller-line-count, py33-lint, py34-lint, py35-lint, validate-test-tools, py27-lint-docstring-include-list, py27-lint-docstring
skipsdist = True

[testenv:py27-lint]
commands = bash .ci/flake8_wrapper.sh
whitelist_externals = bash
deps =
    flake8==3.4.1
    flake8-docstrings==1.1.0
    pydocstyle==2.0.0

[testenv:py33-lint]
commands = bash .ci/flake8_py3_wrapper.sh
whitelist_externals = bash
deps = flake8

[testenv:py34-lint]
commands = bash .ci/flake8_py3_wrapper.sh
whitelist_externals = bash
deps = flake8==3.4.1

[testenv:py35-lint]
commands = bash .ci/flake8_py3_wrapper.sh
whitelist_externals = bash
deps = flake8

[testenv:py27-unit]
commands = bash run_tests.sh --no-create-venv -u
whitelist_externals = bash
deps =
    nose
    NoseHTML
    mock
    mock-ssh-server

# Setup tox environments for linting all of Galaxy for imports and
# just a subset we expect to pass (the include import list). Once the
# include list is reduced to just the inverse of Galaxy's linting
# blacklist these can both just be removed and flake8-import-order can
# be added as a dependency to Galaxy's main linting task.
[testenv:py27-lint-imports]
commands = bash .ci/flake8_wrapper.sh
whitelist_externals = bash
skip_install = True
deps =
    flake8
    flake8-import-order==0.13

[testenv:py27-lint-imports-include-list]
commands = bash .ci/flake8_wrapper_imports.sh
whitelist_externals = bash
skip_install = True
deps =
    flake8==3.4.1
    flake8-import-order==0.13

[testenv:qunit]
commands = bash run_tests.sh -q
whitelist_externals = bash

[testenv:mako-count]
commands = bash .ci/check_mako.sh
whitelist_externals = bash

[testenv:web-controller-line-count]
commands = bash .ci/check_controller.sh
whitelist_externals = bash

[testenv:first_startup]
commands = bash .ci/first_startup.sh
whitelist_externals = bash

[testenv:validate-test-tools]
commands = bash .ci/validate_test_tools.sh
whitelist_externals = bash

[testenv:py27-lint-docstring]
commands = bash .ci/flake8_wrapper_docstrings.sh --exclude
whitelist_externals = bash
skip_install = True
deps =
    flake8
    flake8-docstrings==1.1.0
    pydocstyle==2.0.0


[testenv:py27-lint-docstring-include-list]
commands = bash .ci/flake8_wrapper_docstrings.sh --include
whitelist_externals = bash
skip_install = True
deps =
    flake8==3.4.1
    flake8-docstrings==1.1.0
    pydocstyle==2.0.0
