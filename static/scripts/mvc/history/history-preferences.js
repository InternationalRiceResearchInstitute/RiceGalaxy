define(["mvc/base-mvc"],function(a){"use strict";var b=a.SessionStorageModel.extend({defaults:{expandedIds:{},show_deleted:!1,show_hidden:!1},addExpanded:function(a){var b=this.get("expandedIds");b[a.id]=a.get("id"),this.save("expandedIds",b)},removeExpanded:function(a){var b=this.get("expandedIds");delete b[a.id],this.save("expandedIds",b)},isExpanded:function(a){return _.result(this.get("expandedIds"),a,!1)},allExpanded:function(){return _.values(this.get("expandedIds"))},clearExpanded:function(){this.set("expandedIds",{})},includeDeleted:function(a){return _.isUndefined(a)||this.set("show_deleted",a),this.get("show_deleted")},includeHidden:function(a){return _.isUndefined(a)||this.set("show_hidden",a),this.get("show_hidden")},toString:function(){return"HistoryPrefs("+this.id+")"}},{storageKeyPrefix:"history:",historyStorageKey:function(a){if(!a)throw new Error("HistoryPrefs.historyStorageKey needs valid id: "+a);return b.storageKeyPrefix+a},get:function(a){return new b({id:b.historyStorageKey(a)})},clearAll:function(){for(var a in sessionStorage)0===a.indexOf(b.storageKeyPrefix)&&sessionStorage.removeItem(a)}});return{HistoryPrefs:b}});
//# sourceMappingURL=../../../maps/mvc/history/history-preferences.js.map